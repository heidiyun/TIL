char c1 = 'A' + 1;
char c2 = 'A';
// char c3 = c2 + 1; -> 컴파일 에러. 리터럴 간의 연산은 타입 변환없이 해당 타입으로 계산한다.
			그러나, c2가 int타입으로 변환되어 계산되기 때문에 char 타입에 넣을 수 없다.


문자열 리터럴이 동일하다면 동일한 String객체를 참조하도록 되어 있다.
String strVar1 = "신";
String strVar2 = "신"; => 같은 주소값을 참조하고 있다.
String strVar3 = new String("신"); new연산자로 생성한 String 객체의 주소값을 갖고 있다. 
					->위와 다른 곳을 참조.
-----------수업180226-------------------------------------------------------------------
c언어는 초기화를 따로 하지 않으면 초기화비용이 없다.
자바는 초기화 비용이 있다.

패키지의 목적 : 이름충돌을 막기위해서
this 자기 자신을 가르키는 reference
생성자 위임 : 코드의 중복을 처리하기 위해서.

design pattern : 객체지향 설계에서 좋은 레퍼런스들을 모아놓은것.

팩토리 메소드 : 객체를 생성하는 메소드 -> 생성자의 한계를 처리하기 위해 사용하는 설계 방법

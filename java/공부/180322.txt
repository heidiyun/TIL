memory leak ->  malloc free(x)
메모리 자원 관리, 비메모리 자원 관리.

참조계수 : 객체의 수명관리를 위해서 몇 개의 래퍼런스가 객체를 가르키고 있는지를 알려준다.
  -> 얕은복사는  객체의 파괴시점을 알 수 없기 때문에. (객체의 관리가 힘들다.)

GC가 동작하는 동안 프로그램이 동작할 수 없으므로, 프로그램의 성능이 저하된다.
(런타임에 동작하면 성능은 저하되지만, 더 똑똑하게 돌아간다.)


컴파일이 얻을 수 있는 정보는 한정적이므로,
 제대로 된 코드를 작성하지 않으면, 정상적으로 객체의 메모리가 수거되지 않는다. 
(댕글링 포인터가 발생해서.. 프로그램이 죽을 수도 있다.)


자바가 제공하는 메모리가 아니라 운영체제가 제공하는 서비스를 이용할 때 -> 비메모리 자원
 : file, thread, process

객체의 파괴시점이 명확하지 않아 그것을 관리하기 위해서.....참조계수.
참조계수의 증감이 발생할때 lock unlock이 필요. (이것 때문에 깊은 복사보다 느려질 수 있다.)

weak레퍼런스 객체가 없어지면 null로 바꿔주고 객체를 쓸거면 strong으로 바꿔줘야한다.
weak래퍼런스는 래퍼런스가 객체를 가르키고 있어도 GC가 실행되면 수거해간다.
(strong에서 댕글링 포인터가 생기면 exception발생)
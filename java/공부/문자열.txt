int puts(const char * s);
-> 성공 시 0이 아닌 값을, 실패 시 EOF 반환
int putchar(int c);
-> 성공 시 출력된 문자 정보를, 실패 시 EOF 반환

char * gets(char * s);
-> 성공 시 매개변수로 전달된 값을, 실패 시 NULL 포인터 반환
int getchar(void);
-> 성공 시 입력된 문자를, 실패 시 EOF 반환.

180130
-----------------------------------------------------
 프로세스는 반드시 연속된 공간에 배치되어야 한다.
 단편화 현상으로 인해서 가상메모리 시스템이 나오게 되었다.
	(사용가능한 공간이 있어도 조각조각 나뉘어져서 사용 불가능 상태가 된다.)
 
 프로세스가 사용할 수 있는 페이지 테이블.
	=> 모든 프로세스는 자신만의 페이지 테이블을 갖는다.
	=> 모든 프로세스는 자신만의 주소 공간을 갖는다.
		(다른 프로세스가 접근 x)

 4byte가 표현할 수 있는 최대 크기
 -> 2^32 /1024 / 1024 / 1024 -> 4GB

 운영체제가 가상메모리를 물리메모리로 변환해주는 역할을 한다.
 	

int a;
&a -> 가상 주소값 나온다. 

지역변수는 생성과 파괴의 비용이 없다. 
전역변수는 모듈성이 떨어진다. (아무나 접근 가능, 전역변수에 의존해서 코드를 짜게 되면 그와 관련된 코드를 같이 가져가야 한다.)



int str[i] -> int [i]
int str[i][j] => &str[0][0] -> &int[][] -> int *[] 

함수포인터

runtime에 변경이 가능한 것 -> 변수
문자열이 실행파일안에 .rodata에 저장된다.

char * s ="hello"; => 값을 복사하는게 아니라 .rodata를 가리키고 있다. 수정 불가능. 